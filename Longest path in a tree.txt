#include <bits/stdc++.h>
#define f(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define readv(v,a,b) for(int i=a;i<b;i++) cin>>v[i]
#define printv(v,a,b) for(int i=a;i<b;i++) cout<<v[i]<<" "
#define ull unsigned long long
#define F(i,a,b) for(int i=a;i>=b;i--)
#define vc vector<int>
#define sortall(v) sort(v.begin(),v.end())
using namespace std;

vector<vector<int>>v;
int height(int node)
{
  if(node==-1) return 0;
  int maxh=0;
 for(int i=0;i<v[node].size();i++)
  {
   maxh=max(maxh,height(v[node][i]));
   }
   return maxh+1;
    
}
int longestpath(int node)   //longest path of children or can be sum of two nodes at highest depth
{
  if(node==-1) return 0;
  int m1=0,m2=0,m=0;
  for(int i=0;i<v[node].size();i++)
  {
    int h= height(v[node][i]);
    if(h>m1) m2=m1,m1=h;
    else m2=max(m2,h);
  }
  for(int i=0;i<v[node].size();i++)
        m=max(m,longestpath(v[node][i]));
  return max(m1+m2+1,m);
}

int main()
{
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
  #ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("o1.txt","w",stdout);
  #endif
  clock_t time_req; 
  time_req = clock(); 
  int n;
  cin>>n;
if(n==0)
{
cout<<"0"<<'\n';
return 0;
}
 v.assign(n+1,vector<int>());
  f(i,0,n-1)
  {
     int x,y;cin>>x>>y;
     if(x<y)
     v[x].push_back(y);
    else
     v[y].push_back(x);
     
  }
  f(i,0,n)
  v[i+1].push_back(-1);
  cout<<longestpath(1)-1<<'\n';
    // time_req = clock() - time_req; 
   /* cout << "Processor time taken in pow function: "
        << (float)time_req/CLOCKS_PER_SEC << " seconds" << endl; */
  return 0;
}
